#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  false

# Enable debug mode (to print errors)
onelogin.saml2.debug =  false


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = http://localhost:5050/java-saml-tookit-jspsample/metadata.jsp

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = http://localhost:5050/java-saml-tookit-jspsample/acs.jsp

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://localhost:5050/java-saml-tookit-jspsample/sls.jsp

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert = MIIDAzCCAeugAwIBAgIJXTe3+bmbdTQ7MA0GCSqGSIb3DQEBCwUAMB8xHTAbBgNVBAMTFHNoYWlsZXNoLTIuYXV0aDAuY29tMB4XDTE4MDQyMjE3MTkzOFoXDTMxMTIzMDE3MTkzOFowHzEdMBsGA1UEAxMUc2hhaWxlc2gtMi5hdXRoMC5jb20wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDE8GJ7ZVvOiu24hhAiQALTpU0XVjZu6tzaWO5kFcOPdktgsFcPkYwCwvp4aZhgdjiZiu9GkXhiIGAtf616bzhZU6BDnobjiUHtQEgg5bZUVd3RDBzlTpQjt77zJKyPIKKcV56H7VO0R6/hsT5sQKQ7aaETzdVLEOegGiSXOUTwlZOBay0bt9k3QdzKVER/n+vDUKsRLN6HOyJQFgcZPTblGBQc13qR9U/FunrrgGe5IZcxNFFu+3aPW299p23imlrDJzVy1z1/udcy1ywv8cTKm4q9PcfXKExNZhvV3UCyCIQrwM3F4scW3rmtFWq9+ekncGt/3Q+tTBjhwFYplIqdAgMBAAGjQjBAMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFBZulFWME365Bn4iARfcqzfKXNDvMA4GA1UdDwEB/wQEAwIChDANBgkqhkiG9w0BAQsFAAOCAQEAVE+W22UZhqLI+I5Qf4sfEspkIdd+oI4W0IyfvIf5WAL9LHKA5RjfnRWDLuQ06y4Yw6Bj73DIMQW+zeMj8f+2BTGNdRbHDQmbwol//ZffD9Hvbfw1zF3IZdHilojdvr+4aErufuBBKBBFmJzvzDdGoyyImFNomqdulImjbbql7xh45bffJ1Ub7Cd5mbmd7f79Timsl43mu4eGuziHlzjShZjE1J3p0dewK7T9R6iIqP42g9unJZNLX3UFZyFRxnBYj9V3niSGY6vH3rY8+Om1N7hoM/aBYIwk2KWWsk7Zt1GMEXXkhTozncoIU1CBpwmlQaZC6ThXM/aD2kdQX3QD8w==

# Requires Format PKCS#8   BEGIN PRIVATE KEY	     
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = 

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://app.onelogin.com/saml/metadata/779560

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://shaileshk-dev.onelogin.com/trust/saml2/http-post/sso/779560

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://shaileshk-dev.onelogin.com/trust/saml2/http-redirect/slo/779560


# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url = 


# Public x509 certificate of the IdP
onelogin.saml2.idp.x509cert = MIIECDCCAvCgAwIBAgIUZ7e784O4rds5oL9c2pDUSfyCz+EwDQYJKoZIhvcNAQEFBQAwUzELMAkGA1UEBhMCVVMxCzAJBgNVBAoMAk5BMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxIDAeBgNVBAMMF09uZUxvZ2luIEFjY291bnQgMTI2MDA5MB4XDTE4MDQyMTE2NDcyNFoXDTIzMDQyMTE2NDcyNFowUzELMAkGA1UEBhMCVVMxCzAJBgNVBAoMAk5BMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxIDAeBgNVBAMMF09uZUxvZ2luIEFjY291bnQgMTI2MDA5MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AP2Zs9iS7vCuCMZ9xM6qrAWNwNB49ItpECrrFJP6e5fr6DnaKTxxQ35oO2PNuyrhr30Kz+VAa+RY4wS7htT8HEwGBOu5zimyF7te3L4fMTibMZseeLXG4t69XRMI3LkYqe4qvtr1RndVQXPwYxGp74J7TVznJd3UHj8CLIZMK3fbE7BbweQb1WCMCPx+GHPe2VeMgwreIy0turxdMSA/uXUBr7MXppI8CXPXvc8Ir+LiMouIKnHbme6vJM4awD+b1FkzowCkFViBoQNQRaPPTYIUf2BbfpYTijVRLjiWcht/0cV/mOAFIVLqkSlBGp4tD1EmmOCpZFQ21wRF9UITQIDAQABo4HTMIHQMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFNHKW2sZpi3ONdDRDGUqp+gJQibhMIGQBgNVHSMEgYgwgYWAFNHKW2sZpi3ONdDRDGUqp+gJQibhoVekVTBTMQswCQYDVQQGEwJVUzELMAkGA1UECgwCTkExFTATBgNVBAsMDE9uZUxvZ2luIElkUDEgMB4GA1UEAwwXT25lTG9naW4gQWNjb3VudCAxMjYwMDmCFGe3u/ODuK3bOaC/XNqQ1En8gs/hMA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQUFAAOCAQEASGiX17fOZabV1XhAN5yVmaqlJAftZoXiVmdeO0+PVi4yh1Eh7aI4acMWlgtZt2LDx5ggwEtTLQLBGgMv1wCYLwUPI3tlrm2E9MwzGT/gvfdY2O+zCr25T4Oo2hxqYGcEfS7wHj2uzhk/0FT3jQmS82s8eZIAZME8cH/D+ZJpqtxUawVYvuaF9tyU32PeTRbLNdIrxgWOMe27kFTERGszodQZFLlSvrHOdDFjaDCfec4q4NDhMdZsCHWjx29EF7CuM5tqKeW4n+kj10CFZWmMVzPHVzXM7TUu0HCsCIe6Z0fkzU5dukRYt4zNXrXCnpGXnE1qe0P11Fsg7d+hIUrf/w==

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
onelogin.saml2.idp.certfingerprint = 67:16:90:17:01:83:5D:1B:CC:DB:94:78:29:17:29:6F:14:48:47:A3
onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = false

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = false

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = false

# Sign the Metadata
# Empty means no signature, or comma separate the keyFileName and the certFileName
onelogin.saml2.security.want_messages_signed = 

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key) 
onelogin.saml2.security.sign_metadata = 

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest,
# Set comma separated values urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact


# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = SP Java 
onelogin.saml2.organization.displayname = SP Java Example
onelogin.saml2.organization.url = http://sp.example.com
onelogin.saml2.organization.lang = 

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@@example.com
